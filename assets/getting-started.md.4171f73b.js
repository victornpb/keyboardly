import{_ as e,c as a,o as t,d as s}from"./app.73cfc554.js";const g=JSON.parse(`{"title":"Getting Started","description":"","frontmatter":{},"headers":[{"level":2,"title":"Step. 1: Install Keyboardly","slug":"step-1-install-keyboardly"},{"level":2,"title":"How it works","slug":"how-it-works"},{"level":2,"title":"What's next?","slug":"what-s-next"}],"relativePath":"getting-started.md","lastUpdated":1657468260000}`),o={name:"getting-started.md"},n=s(`<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-hidden="true">#</a></h1><p>This section will help you build a basic Keyboardly documentation site from ground up. If you already have an existing project and would like to keep documentation inside the project, start from Step 2.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Keyboardly is currently in <code>alpha</code> status. It is already suitable for out-of-the-box documentation use, but the config and theming API may still change between minor releases.</p></div><h2 id="step-1-install-keyboardly" tabindex="-1">Step. 1: Install Keyboardly <a class="header-anchor" href="#step-1-install-keyboardly" aria-hidden="true">#</a></h2><p>Add Keyboardly as a dependency for the project.</p><h4 id="yarn" tabindex="-1"><a href="https://github.com/yarnpkg/yarn" target="_blank" rel="noopener noreferrer">Yarn</a> <a class="header-anchor" href="#yarn" aria-hidden="true">#</a></h4><div class="language-sh"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">yarn add keyboardly</span></span>
<span class="line"></span></code></pre></div><h4 id="npm" tabindex="-1">NPM <a class="header-anchor" href="#npm" aria-hidden="true">#</a></h4><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">npm install keyboardly</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h4 id="cdn" tabindex="-1">CDN <a class="header-anchor" href="#cdn" aria-hidden="true">#</a></h4><p>If you don&#39;t use a package manager, you can access <code>keyboardly</code> via <a href="https://unpkg.com/keyboardly/" target="_blank" rel="noopener noreferrer">unpkg (CDN)</a></p><div class="language-html"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://unpkg.com/keyboardly@0.2.0/dist/keyboardly.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">link</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">rel</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">stylesheet</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://unpkg.com/keyboardly@0.2.0/dist/style.css</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="how-it-works" tabindex="-1">How it works <a class="header-anchor" href="#how-it-works" aria-hidden="true">#</a></h2><p>Keyboardly works by handling keyboard events and delegating actions to specific elements on the DOM. This allow you to easily retro-fit great user experience onto existing Apps and sites.</p><p>The premise:</p><blockquote><h3> If theres a button, you should be able to add a keyboard binding to it. </h3></blockquote><p>So if you have been building Apps only for mouse and touch, Keyboardly is a great option to enhance the user experience for keyboard.</p><p>And if you&#39;re building an App from scratch, Keyboardly greatly simplifies how you develop an App for keyboard use.</p><p>And since it uses the DOM it has several advantages:</p><ul><li>You don&#39;t need to worry about keyboard event life cicles. What if this component leaves the page and I forget to disable this event, now all the sudden the keyboard respond to ghost actions.</li><li>Library / Framework agnostic You don&#39;t need to sprinkle logic in every component of your favorite framework</li></ul><h2 id="what-s-next" tabindex="-1">What&#39;s next? <a class="header-anchor" href="#what-s-next" aria-hidden="true">#</a></h2><p>By now, you should have a basic but functional Keyboardly documentation site. But currently, the user has no way to navigate around the site because it&#39;s missing for example sidebar menu we have on this site.</p><p>To enable those navigations, we must add some configurations to the site. Head to to learn how to configure Keyboardly.</p><p>If you would like to know more about what you can do within the page, for example, writing markdown contents, or using Vue Component, check out the &quot;Writing&quot; section of the docs. would be a greate starting point.</p><p>If you want to know how to customize how the site looks (Theme), and find out the features Keyboardly&#39;s default theme provides, visit</p><p>When your documentation site starts to take shape, be sure to read the.</p>`,26),r=[n];function l(i,p,d,c,h,y){return t(),a("div",null,r)}var b=e(o,[["render",l]]);export{g as __pageData,b as default};
